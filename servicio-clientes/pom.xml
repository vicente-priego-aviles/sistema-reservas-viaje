<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- ============================================ -->
    <!-- INFORMACIÓN DEL PROYECTO -->
    <!-- ============================================ -->
    <parent>
        <groupId>dev.javacadabra</groupId>
        <artifactId>reservasviaje</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>servicio-clientes</artifactId>
    <name>Servicio de Clientes</name>
    <description>Microservicio de gestión de clientes para el sistema de Pagos de viaje</description>
    <packaging>jar</packaging>

    <!-- ============================================ -->
    <!-- PROPIEDADES (heredadas del parent, aquí para referencia) -->
    <!-- ============================================ -->
    <properties>
        <!-- Versiones heredadas del parent POM -->
        <java.version>21</java.version>
        <spring-boot.version>3.5.6</spring-boot.version>
        <camunda-spring-boot.version>8.8.0</camunda-spring-boot.version>

        <!-- Propiedades específicas del módulo -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <!-- ============================================ -->
    <!-- DEPENDENCIAS -->
    <!-- ============================================ -->
    <dependencies>

        <!-- ========================================== -->
        <!-- SPRING BOOT STARTERS -->
        <!-- ========================================== -->

        <!-- Spring Boot Web - REST Controllers -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Data JPA - Persistencia -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Spring Boot Validation - Bean Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring Boot Actuator - Health checks, metrics -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- CAMUNDA PLATFORM 8 -->
        <!-- ========================================== -->

        <!-- Camunda Zeebe Spring Boot Starter -->
        <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>camunda-spring-boot-starter</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- BASE DE DATOS -->
        <!-- ========================================== -->

        <!-- H2 Database - Desarrollo/Testing en memoria -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- PostgreSQL Driver - Producción -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- ========================================== -->
        <!-- UTILIDADES -->
        <!-- ========================================== -->

        <!-- Lombok - Reducción de boilerplate -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- MapStruct - Mapeo DTO ↔ Entity -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <!-- Apache Commons Lang3 - Utilidades (StringUtils, etc.) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- DDD - JMOLECULES -->
        <!-- ========================================== -->

        <!-- JMolecules DDD - Anotaciones DDD (@AggregateRoot, @Entity, @ValueObject) -->
        <dependency>
            <groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-ddd</artifactId>
        </dependency>

        <!-- JMolecules Events - Eventos de dominio (@DomainEvent) -->
        <dependency>
            <groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-events</artifactId>
        </dependency>

        <!-- JMolecules Spring Integration - Integración con Spring -->
        <dependency>
            <groupId>org.jmolecules.integrations</groupId>
            <artifactId>jmolecules-spring</artifactId>
        </dependency>

        <!-- JMolecules JPA Integration - Integración con JPA -->
        <dependency>
            <groupId>org.jmolecules.integrations</groupId>
            <artifactId>jmolecules-jpa</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- OBSERVABILIDAD -->
        <!-- ========================================== -->

        <!-- Micrometer Prometheus - Métricas -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- DOCUMENTACIÓN API -->
        <!-- ========================================== -->

        <!-- SpringDoc OpenAPI - Swagger UI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>

        <!-- ========================================== -->
        <!-- TESTING -->
        <!-- ========================================== -->

        <!-- Spring Boot Test - JUnit 5, Mockito, AssertJ -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers - Tests de integración con contenedores -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers PostgreSQL - Tests con PostgreSQL real -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- ArchUnit - Validación de arquitectura hexagonal -->
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- ========================================== -->
        <!-- DEPENDENCIAS OPCIONALES (COMENTADAS) -->
        <!-- ========================================== -->

        <!-- Flyway - Migraciones de base de datos -->
        <!--
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        -->

        <!-- Resilience4j - Circuit Breaker, Rate Limiting -->
        <!--
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot3</artifactId>
            <version>2.2.0</version>
        </dependency>
        -->

        <!-- Distributed Tracing - Zipkin -->
        <!--
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        -->

    </dependencies>

    <!-- ============================================ -->
    <!-- BUILD -->
    <!-- ============================================ -->
    <build>
        <finalName>servicio-clientes</finalName>

        <plugins>

            <!-- ========================================== -->
            <!-- Spring Boot Maven Plugin -->
            <!-- ========================================== -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- ========================================== -->
            <!-- Maven Compiler Plugin -->
            <!-- Configuración explícita para Lombok + MapStruct -->
            <!-- ========================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <!-- Orden importante: Lombok primero, luego MapStruct -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <!-- Preservar nombres de parámetros en bytecode -->
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- ========================================== -->
            <!-- Maven Surefire Plugin - Tests Unitarios -->
            <!-- ========================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Excluir tests de integración (sufijo IT) -->
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- ========================================== -->
            <!-- Maven Failsafe Plugin - Tests de Integración -->
            <!-- ========================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- Incluir tests de integración -->
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>